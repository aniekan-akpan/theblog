---
import MainLayout from '../../layouts/MainLayout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import { getAllProjects, getProjectBySlug } from '../../utils/strapi';

export async function getStaticPaths() {
  const projects = await getAllProjects();
  
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;

if (!project) {
  return Astro.redirect('/404');
}

const statusColors = {
  'planning': 'bg-blue-500/20 text-blue-400 border-blue-500/30',
  'in-progress': 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30',
  'completed': 'bg-green-500/20 text-green-400 border-green-500/30',
  'maintenance': 'bg-purple-500/20 text-purple-400 border-purple-500/30',
};

const statusText = {
  'planning': 'Planning',
  'in-progress': 'In Progress',
  'completed': 'Completed',
  'maintenance': 'Maintenance',
};
---

<MainLayout title={project.title} description={project.description} image={project.image}>
  <article class="mx-auto max-w-4xl px-4 py-12">
    {/* Header */}
    <header class="mb-8">
      <div class="mb-4 flex flex-wrap items-center gap-3">
        {project.status && (
          <span class={`rounded-full px-3 py-1 text-sm font-medium border ${statusColors[project.status]}`}>
            {statusText[project.status]}
          </span>
        )}
        {project.featured && (
          <span class="rounded-full bg-yellow-500/20 px-3 py-1 text-sm font-medium text-yellow-400 border border-yellow-500/30">
            Featured
          </span>
        )}
      </div>

      <h1 class="mb-4 text-4xl font-bold text-zinc-100 md:text-5xl">
        {project.title}
      </h1>
      
      <p class="mb-6 text-xl text-zinc-400">
        {project.description}
      </p>

      <div class="flex flex-wrap items-center gap-6 text-sm text-zinc-500">
        {project.startDate && (
          <div class="flex items-center gap-2">
            <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            <FormattedDate date={project.startDate} />
            {project.endDate && (
              <span>- <FormattedDate date={project.endDate} /></span>
            )}
          </div>
        )}
      </div>

      <div class="mt-6 flex flex-wrap gap-3">
        {project.liveUrl && (
          <a
            href={project.liveUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 rounded-lg bg-blue-500 px-6 py-3 font-medium text-white transition-colors hover:bg-blue-600"
          >
            <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
            </svg>
            View Live Demo
          </a>
        )}
        {project.githubUrl && (
          <a
            href={project.githubUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 rounded-lg border border-zinc-700 bg-zinc-900/50 px-6 py-3 font-medium text-zinc-300 transition-colors hover:border-zinc-600 hover:bg-zinc-900"
          >
            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
            View on GitHub
          </a>
        )}
      </div>
    </header>

    {/* Main Image */}
    {project.image && (
      <div class="mb-8 overflow-hidden rounded-lg border border-zinc-800">
        <img
          src={project.image.url}
          alt={project.image.alt}
          class="w-full"
        />
      </div>
    )}

    {/* Technologies */}
    {project.technologies && project.technologies.length > 0 && (
      <div class="mb-8">
        <h2 class="mb-4 text-xl font-bold text-zinc-100">Technologies Used</h2>
        <div class="flex flex-wrap gap-2">
          {project.technologies.map((tech) => (
            <span class="rounded-full bg-zinc-800 px-4 py-2 text-sm text-zinc-300 border border-zinc-700">
              {tech}
            </span>
          ))}
        </div>
      </div>
    )}

    {/* Body Content */}
    {project.body && (
      <div class="prose prose-invert prose-zinc max-w-none mb-8">
        <div set:html={project.body} />
      </div>
    )}

    {/* Gallery */}
    {project.gallery && project.gallery.length > 0 && (
      <div class="mb-8">
        <h2 class="mb-4 text-xl font-bold text-zinc-100">Gallery</h2>
        <div class="grid gap-4 md:grid-cols-2">
          {project.gallery.map((image) => (
            <div class="overflow-hidden rounded-lg border border-zinc-800">
              <img
                src={image.url}
                alt={image.alt}
                class="w-full transition-transform hover:scale-105"
                loading="lazy"
              />
            </div>
          ))}
        </div>
      </div>
    )}

    {/* Tags */}
    {project.tags && project.tags.length > 0 && (
      <div class="mb-8">
        <h2 class="mb-4 text-xl font-bold text-zinc-100">Tags</h2>
        <div class="flex flex-wrap gap-2">
          {project.tags.map((tag) => (
            <span class="rounded-full bg-zinc-900/50 px-3 py-1 text-sm text-zinc-400 border border-zinc-800">
              #{tag}
            </span>
          ))}
        </div>
      </div>
    )}

    {/* Back Link */}
    <div class="mt-12 border-t border-zinc-800 pt-8">
      <a
        href="/projects"
        class="inline-flex items-center gap-2 text-blue-400 transition-colors hover:text-blue-300"
      >
        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Back to Projects
      </a>
    </div>
  </article>
</MainLayout>
